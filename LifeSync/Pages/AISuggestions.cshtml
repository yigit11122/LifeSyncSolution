@page "/AlSuggestion"
@model LifeSync.Pages.AlSuggestionModel
@{
    ViewData["Title"] = "LifeSync - AI Task Recommender";
}

<div class="layout">
    <aside class="sidebar">
        <div class="logo">
            <h4>🧠 LifeSync</h4>
        </div>
        <nav class="nav-links">
            <a asp-page="/Index">📋 Ana Sayfa</a>
            <a asp-page="/Privacy">🔒 Gizlilik</a>
            <a asp-page="/AiSuggestionsHistory">🕒 Geçmiş aramalar</a>
            <a asp-page="/Settings">⚙️ Ayarlar</a>

        </nav>
    </aside>

    <div class="container">
        <h1>LifeSync</h1>
        <h2>AI Task Recommender</h2>

        <input type="text" id="task" placeholder="Task Name">
        <input type="text" id="description" placeholder="Description">
        <input type="text" id="category" placeholder="Category">
        <button onclick="getSuggestion()">Get Suggestion</button>

        <h3>Recommendations:</h3>
        <ul id="recommendationList"></ul>
    </div>
</div>

<div id="toast" style="visibility: hidden; min-width: 250px; background-color: #333; color: #fff; text-align: center; border-radius: 8px; padding: 16px; position: fixed; z-index: 1000; left: 50%; transform: translateX(-50%); bottom: 30px; font-size: 17px; opacity: 0; transition: opacity 0.5s, bottom 0.5s;">
    ✅ Suggestion ready!
</div>

@section Scripts {
    <script>
        async function getSuggestion() {
            const task = document.getElementById("task").value;
            const description = document.getElementById("description").value;
            const category = document.getElementById("category").value;

            const response = await fetch('/api/ai-suggest', {
                method: 'POST',
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ task, description, category })
            });

            if (!response.ok) {
                alert("Öneri alınamadı!");
                return;
            }

            const suggestions = await response.json();
            console.log("Gelen veri:", suggestions); // 👈 BUNU GÖZLEMLE

            const list = document.getElementById("recommendationList");
            list.innerHTML = "";

            suggestions.forEach(suggestion => {
                const item = document.createElement("li");
                item.innerText = `${suggestion.name} [${suggestion.category}] - Priority: ${suggestion.priority}`;

                if (suggestion.priority.toLowerCase() === "high") {
                    item.style.backgroundColor = "#e6ffed";
                    item.style.borderLeft = "6px solid #28a745";
                } else if (suggestion.priority.toLowerCase() === "medium") {
                    item.style.backgroundColor = "#fff9e6";
                    item.style.borderLeft = "6px solid #ffc107";
                } else if (suggestion.priority.toLowerCase() === "low") {
                    item.style.backgroundColor = "#ffe6e6";
                    item.style.borderLeft = "6px solid #dc3545";
                }

                list.appendChild(item);
            });

            showToast();
            saveToHistory(suggestions);

        }


        function showToast() {
            const toast = document.getElementById("toast");
            toast.style.visibility = "visible";
            toast.style.opacity = "1";
            toast.style.bottom = "50px";

            setTimeout(() => {
                toast.style.opacity = "0";
                toast.style.bottom = "30px";
                setTimeout(() => {
                    toast.style.visibility = "hidden";
                }, 500);
            }, 3000);
        }
                function saveToHistory(suggestions) {
            let history = JSON.parse(localStorage.getItem("aiSuggestionHistory")) || [];
            history.push(...suggestions);
            localStorage.setItem("aiSuggestionHistory", JSON.stringify(history));
        }

    </script>
}
